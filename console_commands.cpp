
/*********************************************************************
*
*   NAME:
*       console_commands.cpp
*
*   DESCRIPTION:
*       API for interfacing with the big red button
*
*   Copyright 2023 Nate Lenze
*
*********************************************************************/

/*--------------------------------------------------------------------
                              INCLUDES
--------------------------------------------------------------------*/
#include "console_commands.hpp"

/*--------------------------------------------------------------------
                          GLOBAL NAMESPACES
--------------------------------------------------------------------*/

/*--------------------------------------------------------------------
                          LITERAL CONSTANTS
--------------------------------------------------------------------*/

/*--------------------------------------------------------------------
                                TYPES
--------------------------------------------------------------------*/

/*--------------------------------------------------------------------
                           MEMORY CONSTANTS
--------------------------------------------------------------------*/

/*--------------------------------------------------------------------
                              VARIABLES
--------------------------------------------------------------------*/

/*--------------------------------------------------------------------
                                MACROS
--------------------------------------------------------------------*/

/*--------------------------------------------------------------------
                              PROCEDURES
--------------------------------------------------------------------*/

/*********************************************************************
*
*   PROCEDURE NAME:
*       print_assert_log
*
*   DESCRIPTION:
*       print assert log function
*
*********************************************************************/
void print_assert_log
    ( 
    core::console& c                            /* console refrence */
    )
{
/*----------------------------------------------------------
local variables
----------------------------------------------------------*/
auto log_iterator     = c.get_log_ref().begin();
auto log_end_iterator = c.get_log_itr();

/*----------------------------------------------------------
loop through asserts
----------------------------------------------------------*/
std::cout << "ASSERT LOG:\r\n";

while( log_iterator != log_end_iterator ) 
    {
    std::cout << *log_iterator << std::endl;
    log_iterator++;
    }

} /* core::console::print_assert_log() */


/*********************************************************************
*
*   PROCEDURE NAME:
*       help
*
*   DESCRIPTION:
*       prints list of functions
*
*********************************************************************/
void help
    ( 
    core::console& c                            /* console refrence */
    )
{
/*----------------------------------------------------------
local variables
----------------------------------------------------------*/
auto idx = commands.begin();           /* index interator */

/*----------------------------------------------------------
loop through and print avialable commands (key of unordered map)
----------------------------------------------------------*/
std::cout << "LIST OF COMMANDS:" << std::endl;
while( idx != commands.end() )
    {
    std::cout << " - " << (*idx).first << std::endl;
    idx++;
    }

} /* help() */


/*********************************************************************
*
*   PROCEDURE NAME:
*       help
*
*   DESCRIPTION:
*       prints list of functions
*
*********************************************************************/
void clear_screen
    ( 
    core::console& c                            /* console refrence */
    )
{
printf("%c[2J", 0x1b);
printf("%c[0;0H", 0x1b);
} /* clear_screen() */